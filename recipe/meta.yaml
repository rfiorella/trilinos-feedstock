{% set version = "16.1.0" %}

package:
  name: trilinos
  version: {{ version }}

source:
  url: https://github.com/trilinos/Trilinos/archive/trilinos-release-{{ version | replace('.', '-') }}.tar.gz
  sha256: e9651c88f581049457036cfc01b527a9d3903c257338eeeab942befd7452f23a


build:
  number: 4
  skip: true  # [win]

requirements:
  build:
    - cmake >=3.23.0
    - ninja
    - make
    - {{ compiler('c') }}
    - {{ stdlib("c") }}
    - {{ compiler('cxx') }}
  host:
    - libblas
    - liblapack
    - {{ mpi }}  # [unix]
    - libboost-devel
    - scikit-umfpack
    - netcdf-cxx4
    - libmatio
    - xorg-libx11
    - hdf5 * mpi_{{ mpi }}_*
    # trilinos cmake expects specific kokkos/kokkos-kernels versions
    - kokkos ==4.5.01
    - kokkos-kernels ==4.5.01
  run:
    - {{ mpi }}  # [unix]
    - libboost-devel
    - scikit-umfpack
    # trilinos cmake expects specific kokkos/kokkos-kernels versions
    - kokkos ==4.5.01
    - kokkos-kernels ==4.5.01

outputs:
  - name: trilinos
    files:
      - lib/libtrilinos*.dylib
      - lib/libtrilinos*.so
      - include/**
      - lib/cmake/Trilinos/**
    build:
      run_exports:
        - {{ pin_subpackage('trilinos', max_pin='x.x') }}
  - name: pytrilinos
    requirements:
      host:
        - {{ pin_subpackage('trilinos', exact=True) }}
        - python
        - numpy
      run:
        - {{ pin_subpackage('trilinos', exact=True) }}
        - python
        - numpy
    files:
      - lib/python*/site-packages/PyTrilinos/**
      - lib/libPyTrilinos*

test:
  commands:
    - test -f $PREFIX/include/TeuchosCore_ConfigDefs.hpp        # [unix]
    - test -f $PREFIX/lib/libteuchoscore.{{ version }}.dylib    # [osx]
    - test -f $PREFIX/lib/libteuchoscore.so.{{ version }}       # [linux]
    - if not exist %PREFIX%\\Library\\include\\TeuchosCore_ConfigDefs.hpp exit 1  # [win]
    - if not exist %PREFIX%\\Library\\lib\\teuchoscore.lib exit 1  # [win]

about:
  home: https://trilinos.org
  license: BSD-3-Clause
  license_family: BSD
  license_file: LICENSE
  summary: Sandia's suite of HPC solvers and enabling technologies
  description: Fast, compiled object-oriented algorithms and enabling technologies that support the solution of large-scale, complex multi-physics engineering and scientific problems.
  dev_url: https://github.com/trilinos/Trilinos

extra:
  recipe-maintainers:
    - rfiorella
    - pyt-viper
